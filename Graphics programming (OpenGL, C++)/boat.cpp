//----------------------------------------------------------------------------------------
/**
 * \file    boat.cpp : initialization and draw of hardcoded model
 * \author  Daniil Kryvarot
 * \date    2023/05/15
 * \brief   Prepared for the Computer graphics course on FEE and FIT CTU in Prague CZ
 */

#include <iostream>
#include "boat.h"
#include "shader.h"
#include "render.h"

const char* TEXTURE = "data/boat.png";

Boat::Boat() : ObjectInstance(), initialized(false)
{
}

/**
 * \brief Overrided draw method for hardcoded Boat
 */
void Boat::draw()
{
	if (initialized && (shaderProgram != nullptr)) {

		glEnable(GL_STENCIL_TEST);
		glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE);

		glStencilFunc(GL_ALWAYS, getIndex(), 0);

		glUseProgram(shaderProgram->getShaderData().program);

		Render::getRender()->setMaterialUniforms(
			shaderProgram->getShaderData(),
			geometry->ambient,
			geometry->diffuse,
			geometry->specular,
			geometry->shininess,
			geometry->texture
		);

		Render::getRender()->setCameraAndLightsUniforms(shaderProgram);

		glm::mat3 texCoordMatrix = glm::mat3(1.0);
		glUniformMatrix3fv(shaderProgram->getShaderData().locations.texCoordMatrix, 1, GL_FALSE, glm::value_ptr(texCoordMatrix));
		glm::mat4 normalMatrix = glm::transpose(glm::inverse(globalModelMatrix));
		glUniformMatrix4fv(shaderProgram->getShaderData().locations.normalMatrix, 1, GL_FALSE, glm::value_ptr(normalMatrix));
		glUniformMatrix4fv(shaderProgram->getShaderData().locations.MMatrix, 1, GL_FALSE, glm::value_ptr(globalModelMatrix));

		glBindVertexArray(geometry->vertexArrayObject);
		glDrawArrays(GL_TRIANGLES, 0, geometry->numTriangles * 3);
		glBindVertexArray(0);

		glDisable(GL_STENCIL_TEST);

		ObjectInstance::draw();
	}
	else {
		std::cerr << "Boat::draw(): Can't draw, mesh not initialized properly!" << std::endl;
	}
}

/**
 * \brief load data from config for 
 * \param data for shader loading
 */
void Boat::deserialize(nlohmann::json data)
{
	ObjectInstance::deserialize(data);

	shaderProgram = Render::getRender()->getShader(data["shaderIndex"].get<int>());
	geometry = new ObjectGeometry;

	static constexpr float vertices[] = {
		0.000000, 2.329837, -2.350999, -0.000000, 0.999700, -0.024800, 0.125194, 0.338556,
-1.879789, 2.414594, 1.067527, -0.000000, 0.999700, -0.024800, 0.250387, 0.509030,
1.879789, 2.414594, 1.067527, -0.000000, 0.999700, -0.024800, 0.000000, 0.509030,

0.000000, 1.114366, 6.334520, -0.912600, -0.327500, 0.244900, 0.345593, 0.959302,
-1.879789, 2.414594, 1.067527, -0.912600, -0.327500, 0.244900, 0.250387, 0.493485,
-1.384771, 0.984601, 1.000000, -0.912600, -0.327500, 0.244900, 0.341187, 0.495002,

-1.879789, 2.414594, 1.067527, -0.897000, -0.435600, 0.074700, 0.250387, 0.493485,
-2.078092, 2.461326, -1.040539, -0.897000, -0.435600, 0.074700, 0.256436, 0.323915,
-1.372094, 1.014276, -1.000000, -0.897000, -0.435600, 0.074700, 0.345084, 0.325522,

0.000000, 0.066859, -1.000000, -0.000000, -0.999200, 0.041100, 0.573748, 0.481341,
0.946333, 0.149117, 1.000000, -0.000000, -0.999200, 0.041100, 0.508958, 0.304216,
-0.946333, 0.149117, 1.000000, -0.000000, -0.999200, 0.041100, 0.669612, 0.318918,

1.372094, 1.014276, -1.000000, 0.945100, -0.326600, -0.010800, 0.764309, 0.669196,
1.879789, 2.414594, 1.067527, 0.945100, -0.326600, -0.010800, 0.669612, 0.501233,
1.384771, 0.984601, 1.000000, 0.945100, -0.326600, -0.010800, 0.760412, 0.499716,

-1.372094, 1.014276, -1.000000, -0.894800, -0.446400, -0.000000, 0.345084, 0.325522,
-0.925693, 0.119443, -3.653358, -0.894800, -0.446400, -0.000000, 0.436678, 0.105109,
-0.925693, 0.119443, -1.000000, -0.894800, -0.446400, -0.000000, 0.428652, 0.330073,

0.000000, 0.066859, 4.670660, -0.865200, -0.454000, 0.212900, 0.436678, 0.818990,
-1.384771, 0.984601, 1.000000, -0.865200, -0.454000, 0.212900, 0.341187, 0.495002,
-0.946333, 0.149117, 1.000000, -0.865200, -0.454000, 0.212900, 0.419700, 0.499440,

1.384771, 0.984601, 1.000000, 0.865200, -0.454000, 0.212900, 0.760412, 0.499716,
0.000000, 0.066859, 4.670660, 0.865200, -0.454000, 0.212900, 0.855903, 0.175728,
0.946333, 0.149117, 1.000000, 0.865200, -0.454000, 0.212900, 0.838926, 0.495278,

1.879789, 2.414594, 1.067527, 0.912600, -0.327500, 0.244900, 0.669612, 0.501233,
0.000000, 1.114366, 6.334520, 0.912600, -0.327500, 0.244900, 0.764818, 0.035416,
1.384771, 0.984601, 1.000000, 0.912600, -0.327500, 0.244900, 0.760412, 0.499716,

0.000000, 0.066859, -1.000000, 0.056700, -0.998400, -0.000000, 0.573748, 0.481341,
0.925693, 0.119443, -3.653358, 0.056700, -0.998400, -0.000000, 0.474561, 0.699368,
0.925693, 0.119443, -1.000000, 0.056700, -0.998400, -0.000000, 0.495173, 0.474144,

-1.372094, 1.014276, -1.000000, -0.991800, -0.127600, -0.000000, 0.345084, 0.325522,
-1.511633, 2.098790, -3.674166, -0.991800, -0.127600, -0.000000, 0.264462, 0.098951,
-1.372094, 1.014276, -3.653358, -0.991800, -0.127600, -0.000000, 0.353109, 0.100558,

0.925693, 0.119443, -1.000000, 0.894800, -0.446400, -0.000000, 0.847878, 0.664645,
1.372094, 1.014276, -3.653358, 0.894800, -0.446400, -0.000000, 0.772335, 0.894160,
1.372094, 1.014276, -1.000000, 0.894800, -0.446400, -0.000000, 0.764309, 0.669196,

0.000000, 1.066859, -4.432981, 0.490100, -0.079700, -0.868000, 0.500000, 0.375000,
1.511633, 2.098790, -3.674166, 0.490100, -0.079700, -0.868000, 0.625000, 0.500000,
1.372094, 1.014276, -3.653358, 0.490100, -0.079700, -0.868000, 0.500000, 0.500000,

0.000000, 1.066859, -4.432981, 0.034900, -0.614500, -0.788200, 0.547089, 0.772638,
0.925693, 0.119443, -3.653358, 0.034900, -0.614500, -0.788200, 0.474561, 0.699368,
0.000000, 0.066859, -3.653358, 0.034900, -0.614500, -0.788200, 0.553136, 0.706565,

-0.925693, 0.119443, -3.653358, -0.034900, -0.614500, -0.788200, 0.631712, 0.713750,
0.000000, 1.066859, -4.432981, -0.034900, -0.614500, -0.788200, 0.547089, 0.772638,
0.000000, 0.066859, -3.653358, -0.034900, -0.614500, -0.788200, 0.553136, 0.706565,

-1.511633, 2.098790, -3.674166, -0.490100, -0.079700, -0.868000, 0.264462, 0.098951,
0.000000, 1.066859, -4.432981, -0.490100, -0.079700, -0.868000, 0.382064, 0.046417,
-1.372094, 1.014276, -3.653358, -0.490100, -0.079700, -0.868000, 0.353109, 0.100558,

0.000000, 2.329837, -2.350999, -0.026900, 0.989500, -0.142000, 0.125194, 0.338556,
-1.511633, 2.098790, -3.674166, -0.026900, 0.989500, -0.142000, 0.250387, 0.112390,
-2.078092, 2.461326, -1.040539, -0.026900, 0.989500, -0.142000, 0.250387, 0.338556,

-0.925693, 0.119443, -1.000000, -0.056700, -0.998400, -0.000000, 0.652324, 0.488526,
0.000000, 0.066859, -3.653358, -0.056700, -0.998400, -0.000000, 0.553136, 0.706565,
0.000000, 0.066859, -1.000000, -0.056700, -0.998400, -0.000000, 0.573748, 0.481341,

1.372094, 1.014276, -1.000000, 0.889500, -0.437700, -0.131100, 0.764309, 0.669196,
1.511633, 2.098790, -3.674166, 0.889500, -0.437700, -0.131100, 0.683687, 0.895766,
2.078092, 2.461326, -1.040539, 0.889500, -0.437700, -0.131100, 0.675662, 0.670802,

0.000000, 2.329837, -2.350999, 0.064600, 0.992900, -0.099600, 0.125194, 0.338556,
1.511633, 2.098790, -3.674166, 0.064600, 0.992900, -0.099600, 0.000000, 0.112390,
0.000000, 2.066859, -4.971918, 0.064600, 0.992900, -0.099600, 0.125194, 0.000000,

1.879789, 2.414594, 1.067527, -0.072700, 0.997200, 0.015300, 0.000000, 0.509030,
2.078092, 2.461326, -1.040539, -0.072700, 0.997200, 0.015300, 0.000000, 0.338556,
0.000000, 2.329837, -2.350999, -0.072700, 0.997200, 0.015300, 0.125194, 0.338556,

0.000000, 2.329837, -2.350999, 0.072700, 0.997200, 0.015300, 0.125194, 0.338556,
-2.078092, 2.461326, -1.040539, 0.072700, 0.997200, 0.015300, 0.250387, 0.338556,
-1.879789, 2.414594, 1.067527, 0.072700, 0.997200, 0.015300, 0.250387, 0.509030,

-1.879789, 2.414594, 1.067527, -0.000000, 0.997600, 0.069300, 0.250387, 0.509030,
0.000000, 2.019353, 6.759959, -0.000000, 0.997600, 0.069300, 0.125194, 1.000000,
1.879789, 2.414594, 1.067527, -0.000000, 0.997600, 0.069300, 0.000000, 0.509030,

0.000000, 1.114366, 6.334520, -0.942900, -0.141700, 0.301500, 0.345593, 0.959302,
0.000000, 2.019353, 6.759959, -0.942900, -0.141700, 0.301500, 0.269962, 0.994718,
-1.879789, 2.414594, 1.067527, -0.942900, -0.141700, 0.301500, 0.250387, 0.493485,

-0.925693, 0.119443, -1.000000, -0.894800, -0.446400, -0.002600, 0.428652, 0.330073,
-0.946333, 0.149117, 1.000000, -0.894800, -0.446400, -0.002600, 0.419700, 0.499440,
-1.372094, 1.014276, -1.000000, -0.894800, -0.446400, -0.002600, 0.345084, 0.325522,

-0.946333, 0.149117, 1.000000, -0.885400, -0.464600, -0.012500, 0.419700, 0.499440,
-1.384771, 0.984601, 1.000000, -0.885400, -0.464600, -0.012500, 0.341187, 0.495002,
-1.372094, 1.014276, -1.000000, -0.885400, -0.464600, -0.012500, 0.345084, 0.325522,

-1.384771, 0.984601, 1.000000, -0.945100, -0.326600, -0.010800, 0.341187, 0.495002,
-1.879789, 2.414594, 1.067527, -0.945100, -0.326600, -0.010800, 0.250387, 0.493485,
-1.372094, 1.014276, -1.000000, -0.945100, -0.326600, -0.010800, 0.345084, 0.325522,

-0.946333, 0.149117, 1.000000, -0.056700, -0.998300, 0.014200, 0.669612, 0.318918,
-0.925693, 0.119443, -1.000000, -0.056700, -0.998300, 0.014200, 0.652324, 0.488526,
0.000000, 0.066859, -1.000000, -0.056700, -0.998300, 0.014200, 0.573748, 0.481341,

0.000000, 0.066859, -1.000000, 0.056700, -0.998300, 0.014200, 0.573748, 0.481341,
0.925693, 0.119443, -1.000000, 0.056700, -0.998300, 0.014200, 0.495173, 0.474144,
0.946333, 0.149117, 1.000000, 0.056700, -0.998300, 0.014200, 0.508958, 0.304216,

0.946333, 0.149117, 1.000000, -0.000000, -0.999700, -0.022400, 0.508958, 0.304216,
0.000000, 0.066859, 4.670660, -0.000000, -0.999700, -0.022400, 0.617798, 0.000000,
-0.946333, 0.149117, 1.000000, -0.000000, -0.999700, -0.022400, 0.669612, 0.318918,

0.946333, 0.149117, 1.000000, 0.894800, -0.446400, -0.002600, 0.838926, 0.495278,
0.925693, 0.119443, -1.000000, 0.894800, -0.446400, -0.002600, 0.847878, 0.664645,
1.372094, 1.014276, -1.000000, 0.894800, -0.446400, -0.002600, 0.764309, 0.669196,

1.372094, 1.014276, -1.000000, 0.897000, -0.435600, 0.074700, 0.764309, 0.669196,
2.078092, 2.461326, -1.040539, 0.897000, -0.435600, 0.074700, 0.675662, 0.670802,
1.879789, 2.414594, 1.067527, 0.897000, -0.435600, 0.074700, 0.669612, 0.501233,

1.384771, 0.984601, 1.000000, 0.885400, -0.464600, -0.012500, 0.760412, 0.499716,
0.946333, 0.149117, 1.000000, 0.885400, -0.464600, -0.012500, 0.838926, 0.495278,
1.372094, 1.014276, -1.000000, 0.885400, -0.464600, -0.012500, 0.764309, 0.669196,

-1.372094, 1.014276, -1.000000, -0.894800, -0.446400, -0.000000, 0.345084, 0.325522,
-1.372094, 1.014276, -3.653358, -0.894800, -0.446400, -0.000000, 0.353109, 0.100558,
-0.925693, 0.119443, -3.653358, -0.894800, -0.446400, -0.000000, 0.436678, 0.105109,

0.000000, 0.066859, 4.670660, -0.892000, -0.382600, 0.240900, 0.436678, 0.818990,
0.000000, 1.114366, 6.334520, -0.892000, -0.382600, 0.240900, 0.345593, 0.959302,
-1.384771, 0.984601, 1.000000, -0.892000, -0.382600, 0.240900, 0.341187, 0.495002,

1.384771, 0.984601, 1.000000, 0.892000, -0.382600, 0.240900, 0.760412, 0.499716,
0.000000, 1.114366, 6.334520, 0.892000, -0.382600, 0.240900, 0.764818, 0.035416,
0.000000, 0.066859, 4.670660, 0.892000, -0.382600, 0.240900, 0.855903, 0.175728,

1.879789, 2.414594, 1.067527, 0.942900, -0.141700, 0.301500, 0.669612, 0.501233,
0.000000, 2.019353, 6.759959, 0.942900, -0.141700, 0.301500, 0.689187, 0.000000,
0.000000, 1.114366, 6.334520, 0.942900, -0.141700, 0.301500, 0.764818, 0.035416,

0.000000, 0.066859, -1.000000, 0.056700, -0.998400, -0.000000, 0.573748, 0.481341,
0.000000, 0.066859, -3.653358, 0.056700, -0.998400, -0.000000, 0.553136, 0.706565,
0.925693, 0.119443, -3.653358, 0.056700, -0.998400, -0.000000, 0.474561, 0.699368,

-1.372094, 1.014276, -1.000000, -0.889500, -0.437700, -0.131100, 0.345084, 0.325522,
-2.078092, 2.461326, -1.040539, -0.889500, -0.437700, -0.131100, 0.256436, 0.323915,
-1.511633, 2.098790, -3.674166, -0.889500, -0.437700, -0.131100, 0.264462, 0.098951,

0.925693, 0.119443, -1.000000, 0.894800, -0.446400, -0.000000, 0.847878, 0.664645,
0.925693, 0.119443, -3.653358, 0.894800, -0.446400, -0.000000, 0.855903, 0.889609,
1.372094, 1.014276, -3.653358, 0.894800, -0.446400, -0.000000, 0.772335, 0.894160,

0.000000, 1.066859, -4.432981, 0.473200, -0.236100, -0.848700, 0.547089, 0.772638,
1.372094, 1.014276, -3.653358, 0.473200, -0.236100, -0.848700, 0.436678, 0.695808,
0.925693, 0.119443, -3.653358, 0.473200, -0.236100, -0.848700, 0.474561, 0.699368,

-0.925693, 0.119443, -3.653358, -0.473200, -0.236100, -0.848700, 0.631712, 0.713750,
-1.372094, 1.014276, -3.653358, -0.473200, -0.236100, -0.848700, 0.669612, 0.717125,
0.000000, 1.066859, -4.432981, -0.473200, -0.236100, -0.848700, 0.547089, 0.772638,

-1.511633, 2.098790, -3.674166, -0.608000, -0.376700, -0.698900, 0.264462, 0.098951,
0.000000, 2.066859, -4.971918, -0.608000, -0.376700, -0.698900, 0.301544, 0.000000,
0.000000, 1.066859, -4.432981, -0.608000, -0.376700, -0.698900, 0.382064, 0.046417,

0.000000, 2.329837, -2.350999, -0.064600, 0.992900, -0.099600, 0.125194, 0.338556,
0.000000, 2.066859, -4.971918, -0.064600, 0.992900, -0.099600, 0.125194, 0.000000,
-1.511633, 2.098790, -3.674166, -0.064600, 0.992900, -0.099600, 0.250387, 0.112390,

-0.925693, 0.119443, -1.000000, -0.056700, -0.998400, -0.000000, 0.652324, 0.488526,
-0.925693, 0.119443, -3.653358, -0.056700, -0.998400, -0.000000, 0.631712, 0.713750,
0.000000, 0.066859, -3.653358, -0.056700, -0.998400, -0.000000, 0.553136, 0.706565,

1.372094, 1.014276, -1.000000, 0.991800, -0.127600, -0.000000, 0.764309, 0.669196,
1.372094, 1.014276, -3.653358, 0.991800, -0.127600, -0.000000, 0.772335, 0.894160,
1.511633, 2.098790, -3.674166, 0.991800, -0.127600, -0.000000, 0.683687, 0.895766,

0.000000, 2.329837, -2.350999, 0.026900, 0.989500, -0.142000, 0.125194, 0.338556,
2.078092, 2.461326, -1.040539, 0.026900, 0.989500, -0.142000, 0.000000, 0.338556,
1.511633, 2.098790, -3.674166, 0.026900, 0.989500, -0.142000, 0.000000, 0.112390,

0.000000, 1.066859, -4.432981, 0.608000, -0.376700, -0.698900, 0.500000, 0.375000,
0.000000, 2.066859, -4.971918, 0.608000, -0.376700, -0.698900, 0.625000, 0.375000,
1.511633, 2.098790, -3.674166, 0.608000, -0.376700, -0.698900, 0.625000, 0.500000
	};

	geometry->ambient = glm::vec3(1.0);
	geometry->diffuse = glm::vec3(1.0);
	geometry->specular = glm::vec3(0.0);
	geometry->shininess = 1.0;
	geometry->texture = 0;

	geometry->numTriangles = 48;
	geometry->elementBufferObject = 0;

	glGenVertexArrays(1, &geometry->vertexArrayObject);
	glBindVertexArray(geometry->vertexArrayObject);

	glGenBuffers(1, &geometry->vertexBufferObject);
	glBindBuffer(GL_ARRAY_BUFFER, geometry->vertexBufferObject);
	glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);

	if ((shaderProgram != nullptr) && shaderProgram->getShaderData().initialized && (shaderProgram->getShaderData().locations.position != -1) && (shaderProgram->getShaderData().locations.PMatrix != -1) && (shaderProgram->getShaderData().locations.VMatrix != -1) && (shaderProgram->getShaderData().locations.MMatrix != -1)) {
		glEnableVertexAttribArray(shaderProgram->getShaderData().locations.position);
		glVertexAttribPointer(shaderProgram->getShaderData().locations.position, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)0);
		glEnableVertexAttribArray(shaderProgram->getShaderData().locations.normal);
		glVertexAttribPointer(shaderProgram->getShaderData().locations.normal, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)0);
		glEnableVertexAttribArray(shaderProgram->getShaderData().locations.texCoord);
		glVertexAttribPointer(shaderProgram->getShaderData().locations.texCoord, 2, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)0);
		initialized = true;
	}
	else {
		std::cerr << "Triangle::Triangle(): shaderProgram struct not initialized!" << std::endl;
	}
}

Boat::~Boat() {
}
